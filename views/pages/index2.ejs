<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Geocoding service</title>
    	<script type="text/javascript" src="/spin.js"></script>
			<script src="/jquery-2.1.4.js"></script>
      <script type="text/javascript" src="http://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0"></script>
	    <link href="/post.css" rel="stylesheet" type="text/css">
	     <link href="/bootstrap.css" rel="stylesheet" type="text/css">
    <style>
      
    </style>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true"></script>
    <script>
    
var geocoder;
var map;

function initialize() {
  geocoder = new google.maps.Geocoder();
  var latlng = new google.maps.LatLng(-34.397, 150.644);
  var mapOptions = {
    zoom: 10,
    center: latlng
  }
  map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
}

function insertSpinner(){
		console.log("spinner beginning");
		$(".spinner").remove();
         var opts = {
  		lines: 13 // The number of lines to draw
		, length: 28 // The length of each line
		, width: 14 // The line thickness
		, radius: 42 // The radius of the inner circle
		, scale: 1 // Scales overall size of the spinner
		, corners: 1 // Corner roundness (0..1)
		, color: '#000' // #rgb or #rrggbb or array of colors
		, opacity: 0.25 // Opacity of the lines
		, rotate: 0 // The rotation offset
		, direction: 1 // 1: clockwise, -1: counterclockwise
		, speed: 1 // Rounds per second
		, trail: 60 // Afterglow percentage
		, fps: 20 // Frames per second when using setTimeout() as a fallback for CSS
		, zIndex: 2e9 // The z-index (defaults to 2000000000)
		, className: 'spinner' // The CSS class to assign to the spinner
		, top: '50%' // Top position relative to parent
		, left: '50%' // Left position relative to parent
		, shadow: false // Whether to render a shadow
		, hwaccel: false // Whether to use hardware acceleration
		, position: 'absolute' // Element positioning
		}
		
		var target = document.getElementById('map-canvas')
		var spinner = new Spinner(opts).spin(target);
		console.log("spinner inserted");
}

var iterations = 0;

function codeAddress() {

 	insertSpinner();
		
	if(iterations > 0){
	removeLine();
	}
	
  var address = document.getElementById('address').value;
  geocoder.geocode( { 'address': address}, function(results, status) {
    if (status == google.maps.GeocoderStatus.OK) {
      map.setCenter(results[0].geometry.location);
      var populationOptions = {
      strokeColor: 'white',
      strokeOpacity: 1,
      strokeWeight: 3,
      fillColor: 'blue',
      fillOpacity: 0.4,
      editable: true,
      draggable: true,
      map: map,
      center: results[0].geometry.location,
      radius: 5/0.00062137
    };
    // Add the circle for this city to the map.
    cityCircle = new google.maps.Circle(populationOptions); 
    
    iterations = iterations + 1;
    refresh([cityCircle.getCenter().lat(),cityCircle.getCenter().lng()],cityCircle.getRadius()*0.00062137);
    
     google.maps.event.addListener(cityCircle, 'radius_changed', function() {
     insertSpinner();
      	miles = cityCircle.getRadius()*0.00062137;
  		if(miles > 5){
  			removeLine();
  			codeAddress();
    	};
    	console.log(miles);
    	refresh([cityCircle.getCenter().lat(),cityCircle.getCenter().lng()],miles);
  		});
  		
  	  google.maps.event.addListener(cityCircle, 'center_changed', function() {
  	  insertSpinner();
      	 console.log("lat ",cityCircle.getCenter().lat());
      	 console.log('lng', cityCircle.getCenter().lng());
  		refresh([cityCircle.getCenter().lat(),cityCircle.getCenter().lng()],cityCircle.getRadius()*0.00062137);
    	});	 
    	   
    } else {
      alert('Geocode was not successful for the following reason: ' + status);
   }
 });
};

function removeLine() {
  	cityCircle.setMap(null);
}


google.maps.event.addDomListener(window, 'load', initialize);


		
		function refresh(lastKnown, radius)
		{
		
		lat = lastKnown[0];
		lon = lastKnown[1];
		
		 var url = "https://api.geofeedia.com/v1/search/latlon/"+lat+","+lon+","+radius+"?appId=3c7f0f3c&appKey=d71ba6aa64fd467bb69f7d39125012e1";
    
    		var response = httpGet(url);
    		obj = JSON.parse(response);
    		$("#geo").remove();
    		 
   		 	$("#geofeedia").append("<table id='geo'></table>");
    		
    		if(obj.items.length == 0){
    		
    		$('#modal').modal('show');

    		}
    		
    		for (i = 0; i < obj.items.length; i++) 
    		{ 
    		
			try{   	
    		var source = obj.items[i].source;
    		var date = obj.items[i].publishDate;
    		var title = obj.items[i].title;
    		var description = obj.items[i].description;
    		try{
    		var name = obj.items[i].author.name;
    		}catch(err){
    		var name = "Name was unidentified";
    		}
    		try{
    		var post_link = obj.items[i].url;
    		}catch(err){
    		var post_link = "#";
    		}
    		try{
    		var name_link = obj.items[i].author.url;
    		}catch(err){
    		var name_link = "#";
    		}
    		var media_type = obj.items[i].mediaItems[0].type;
    		var image = obj.items[i].mediaItems[0].media[0].thumbnail.url;
    		var lat = obj.items[i].latitude;
    		var lon = obj.items[i].longitude;
    		
    		var logo = "";
    		if(source == "instagram"){
    		logo = "http://www.iconarchive.com/download/i80462/uiconstock/socialmedia/Instagram.ico";
    		}else if(source == "facebook"){
    		logo = "http://inwallspeakers1.com/wp-content/uploads/2015/06/facebook-logo-png-transparent-background.png";
    		}else if(source == "twitter"){
    		logo = "http://www.adweek.com/socialtimes/files/2014/07/alltwitter-twitter-bird-logo-white-on-blue.png";
    		}else if(source == "flickr"){
    		logo = "http://www.timothypflaniganmd.com/wp-content/uploads/2014/12/flickr-logo-transparent.png";
    		}
    		

    		$("#geo").append("<div class='container' id='container"+ i +"'></div>");
    		button = "<a href='"+post_link+"' target='_blank'><button type='button' class='btn btn-primary toProfile' style='margin-bottom:10px;'>Comment</button></a>";
    		
    		main_image1 = "<div class='box'><div class='firstcell'><img class='main_image' src='"+image+"' alt=''/></div><div class='content'><div class='box2'><p>" + title + "</p></div></div></div>";
    		logo3 = "<div class='content'><div class='box3'><img class='logo' src='" + logo + "'/><div class='userstamp'><a href='"+name_link+"' target='_blank'>"+ name + "</a><br/>"+ date +"</div></div></div>";
    		
    		$("#container"+i).append(main_image1).append(logo3).after(button);
			
    		}catch(err){
    		
    		}
    		}
    		$(".spinner").remove();
		}
		
		function httpGet(theUrl)
		{
   		var xmlHttp = new XMLHttpRequest();
    	xmlHttp.open( "GET", theUrl, false );
    	xmlHttp.send( null );
    
    	return xmlHttp.responseText;
		}
		
		
		function distance(lat1, lon1, lat2, lon2, unit) {
    	var radlat1 = Math.PI * lat1/180
    	var radlat2 = Math.PI * lat2/180
    	var radlon1 = Math.PI * lon1/180
    	var radlon2 = Math.PI * lon2/180
    	var theta = lon1-lon2
    	var radtheta = Math.PI * theta/180
    	var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);
    	dist = Math.acos(dist)
    	dist = dist * 180/Math.PI
    	dist = dist * 60 * 1.1515
    	if (unit=="K") { dist = dist * 1.609344 }
   		if (unit=="N") { dist = dist * 0.8684 }
    	return dist
		}



   </script>
  </head>
  <body>
    
    <div id="map-canvas"></div>
    <div id="panel" style="margin-bottom:10px;">
      <input id="address" type="textbox" value="Sydney, NSW">
      <input type="button" class='btn btn-primary' value="Search" onclick="codeAddress()" >
    </div>
    
    
    <div id="geofeedia"><div id='geo'></div></div>
    
	<script>
hsp.init({apiKey:"e2weulwolrsw0ocwc404k4o8k3icmckml5k"});
</script>
	
	
<script src="https://d2l6uygi1pgnys.cloudfront.net/jsapi/2-0/hsp.js">
</script> 
   
   
  <div class="modal fade" id="modal">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title panel-danger">An Error Occurred</h4>
      </div>
      <div class="modal-body">
        <p id="error_message">Please check your search address.</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>
    
  </body>
</html>